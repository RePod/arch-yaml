name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # CWD -> $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      - name: Prepare env
        run: sudo snap install yq

      # yq: just as bad as snap. pick a fork, pick a version!
      - name: Sanity check single YAMLs
        run: find games/sync/ -type f -name "*.yaml" -print0 | xargs -0 yq -P > /dev/null

      - name: Dynamic Triggers
        run: |
          ASYNC_TRIGGERS=$(yq eval-all '(.triggers[] | select(.option_name == "async").options) | . as $item ireduce ({}; . * $item )' ./games/sync/*.yaml) \
          PER_GAME_NAMES=$(yq '[.triggers[] | select(.option_name == "game")]' ./games/sync/*.yaml) \
          yq -i '(.triggers[] | select(.option_name == "async").options) += env(ASYNC_TRIGGERS) | (.triggers += env(PER_GAME_NAMES))' ./games/triggers.yaml

      #- name: Archipelago | Restore Cache
      #  id: arch-cache-restore
      #  uses: actions/cache/restore@v4
      #  with:
      #    key: arch-cache
      #    path: /tmp/Archipelago

      - name: Archipelago | Setup
        if: steps.arch-cache-restore.outputs.cache-hit != 'true'
        run: |
          wget -nv -P "/tmp" https://github.com/ArchipelagoMW/Archipelago/releases/download/0.5.0/Archipelago_0.5.0_linux-x86_64.tar.gz
          mkdir /tmp/Archipelago
          tar xzf /tmp/Archipelago*.tar.gz -C /tmp/
          chmod +x /tmp/Archipelago/ArchipelagoGenerate

      # TODO: better/dynamically
      # Diva folder checks CWD so... ¯\_(ツ)_/¯
      - name: Archipelago | Install Custom Worlds
        if: steps.arch-cache-restore.outputs.cache-hit != 'true'
        run: |
          cp -a games/custom_worlds/. /tmp/Archipelago/custom_worlds
          UNSUPPORTED=$(yq '.apworld' games/sync/*.yaml | grep -Po '(?<=.com\/)(.*?)(?=\/releases)' | awk '{printf("https://api.github.com/repos/%s/releases/latest\n", $0);}')
          echo "$UNSUPPORTED" | parallel "wget -O - {} | jq -cr '.assets[] | select(.browser_download_url | endswith(".apworld")) | .browser_download_url' | xargs wget -nv -P /tmp/Archipelago/custom_worlds"
          mkdir diva
          wget -nv -P "./diva" https://gist.githubusercontent.com/RePod/f4252f1bf099713d9559fdc7a0c26e35/raw/RePodMiku.json

      #- name: Archipelago | Save Cache
      #  uses: actions/cache/save@v4
      #  with:
      #    key: arch-cache
      #    path: /tmp/Archipelago

      # do we generate single multiworlds or multi single worlds?
      # ~13s to gen a 16 game multi with sync settings. private repos are limited to 2 threads, public 4.
      - name: Archipelago | Multi Sync
        run: |
          cp games/sync/*.yaml /tmp/Archipelago/Players
          /tmp/Archipelago/ArchipelagoGenerate --skip_prog_balancing --skip_output

      # fuzz a bit. over time this will shake out errors, if any.
      - name: Archipelago | Multi Sync (Fuzz)
        run: |
          parallel -N0 /tmp/Archipelago/ArchipelagoGenerate --skip_prog_balancing --skip_output ::: {1..2}

      - name: Archipelago | Multi Async/Triggers (Fuzz)
        run: |
          find /tmp/Archipelago/Players/ -maxdepth 1 -type f -name "*.yaml" -exec yq -i '(.async = true)' {} \;
          parallel -N0 /tmp/Archipelago/ArchipelagoGenerate --skip_prog_balancing --skip_output ::: {1..2}

      - name: Concat | Create
        run: |
          GAMES_CONCAT=$(yq eval-all '{(.game: .[.game])}  | . as $item ireduce ({}; . * $item )' games/sync/*.yaml)
          echo -e "$(cat games/header.yaml ; echo "$GAMES_CONCAT" ; cat games/triggers.yaml)" > "RePod.yaml"
          yq -P "RePod.yaml" > /dev/null

      # Should be a quick fuzz with only 1 player
      - name: Concat | Archipelago sanity check
        run: |
          rm -rf /tmp/Archipelago/Players/*
          cp "RePod.yaml" /tmp/Archipelago/Players/
          parallel -N0 /tmp/Archipelago/ArchipelagoGenerate --skip_prog_balancing --skip_output ::: {1..2}

      - name: Commit & Push
        id: Commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add RePod.yaml
          git commit -m "Update RePod.yaml" || exit 0
          git push || exit 0
        shell: bash
