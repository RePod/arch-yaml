name: CI

env:
  # GigaYAML output name.
  GIGAYAML: "RePod.yaml"
  # If an individual YAML doesn't specify a "weight" override for game selection, this value is used instead.
  DEFAULT_WEIGHT: 9

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      skip_progbal:
        description: 'Skip Progression Balancing (faster)'
        type: boolean
        required: true
        default: true
      fuzz_iterations:
        description: 'Fuzz Iterations'
        type: number
        required: true
        default: '2'
      generation_seed:
        description: 'Generation Seed'
        type: number
        required: false
        default: ''
  schedule:
    - cron: "0 0 * * 0"

#${{ inputs.generation_seed }}
#${{ inputs.fuzz_iterations }}
#${{ inputs.skip_progbal }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # CWD -> $GITHUB_WORKSPACE
      - uses: actions/checkout@v4
      - name: Prepare env
        run: |
          echo "GEN_ROUNDS=2" >> "$GITHUB_ENV"
          echo "GEN_SKIPPROG=--skip_prog_balancing" >> "$GITHUB_ENV"

      - name: Prepare env (dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          [[ -n "${{ inputs.fuzz_iterations }}" ]] && echo "GEN_ROUNDS=${{ inputs.fuzz_iterations }}" >> "$GITHUB_ENV"
          [[ "${{ inputs.skip_progbal }}" == "false" ]] && echo "GEN_SKIPPROG=" >> "$GITHUB_ENV"
          if [[ -n "${{ inputs.generation_seed }}" ]]; then
            echo "GEN_SEED=--seed ${{ inputs.generation_seed }}" >> "$GITHUB_ENV"
          fi

      - name: Sanity check single YAMLs
        run: |
          find games/sync/ -type f -name "*.yaml" -print0 | xargs -0 yq -P > /dev/null

      - name: Dynamic Triggers
        run: |
          ASYNC_TRIGGERS=$(yq ea -N '.triggers[] | select(.option_name == "async").options' games/sync/*.yaml) \
          PER_GAME_NAMES=$(yq '[.triggers[] | select(.option_name == "game")]' games/sync/*.yaml) \
          MISC_TRIGGERS=$(yq ea -N '[.triggers[] | select(.option_name | test("(game|async|per_game_name)") | not)]' games/sync/*.yaml) \
          yq -i '(.triggers[] | select(.option_name == "async").options) += env(ASYNC_TRIGGERS) | (.triggers += env(PER_GAME_NAMES)) | (.triggers += env(MISC_TRIGGERS))' games/triggers.yaml

      # AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
      - name: Dynamic Games
        run: |
           echo -e "$(yq -N '{.game: (.weight // env(DEFAULT_WEIGHT)), "desc": .description // ""} | .[] line_comment = .desc | del .desc' games/sync/*.yaml |
           sed -r '/^\s*$/d' |
           yq '{"game": .}' |
           sed $'s/#/\001#/' |
           column -ets $'\001')\n" |
           sed 's/\s*$//' >> games/header.yaml

      #- name: Archipelago | Restore Cache
      #  id: arch-cache-restore
      #  uses: actions/cache/restore@v4
      #  with:
      #    key: arch-cache
      #    path: /tmp/Archipelago

      - name: Archipelago | Setup
        if: steps.arch-cache-restore.outputs.cache-hit != 'true'
        run: |
          wget -qnv -O - https://api.github.com/repos/ArchipelagoMW/Archipelago/releases |
            jq '[.[] | select(.prerelease | not) | .assets[] | select(.browser_download_url | endswith(".tar.gz"))][0].browser_download_url' |
            xargs wget -nv -P /tmp
          mkdir /tmp/Archipelago
          tar xzf /tmp/Archipelago*.tar.gz -C /tmp/
          chmod +x /tmp/Archipelago/ArchipelagoGenerate
          /tmp/Archipelago/ArchipelagoLauncher "Open host.yaml" 2>/dev/null

      # Originally this hit /latest but Yacht Dice made it obvious releases can have (or not) whatever they want.
      # Void Stranger is (currently) releasing the world in the repo files. Another exception!
      - name: Archipelago | Custom Worlds - Install
        if: steps.arch-cache-restore.outputs.cache-hit != 'true'
        run: |
          cp -a games/custom_worlds/. /tmp/Archipelago/custom_worlds
          UNSUPPORTED=$(
            yq '.description' games/sync/*.yaml |
            grep -Po '(?<=.com\/)(.*?)(?=\/releases)(?!.*\.apworld)' |
            awk '{printf("https://api.github.com/repos/%s/releases\n", $0);}')
          [[ -n "$UNSUPPORTED" ]] && echo "$UNSUPPORTED" | parallel --halt now,fail=1 "
            wget -q -O - {} |
            jq '[.[].assets[] | select(.browser_download_url | endswith(\".apworld\"))][0].browser_download_url' |
            xargs wget -nv -P /tmp/Archipelago/custom_worlds"
          UNSUPPORTED=$(yq '.description' games/sync/*.yaml | grep -Po '(https:\/\/.*\.apworld)$' || true)
          if [ -n "$UNSUPPORTED" ]; then
            echo "$UNSUPPORTED" | parallel --halt now,fail=1 "xargs wget -nv -P /tmp/Archipelago/custom_worlds"
          fi
          sha1sum /tmp/Archipelago/custom_worlds/*.apworld

      - name: Archipelago | Custom Worlds - Normalize
        run: |
          NORMALIZE=$(find /tmp/Archipelago/custom_worlds -name "*-*.apworld")
          if [ -n "$NORMALIZE" ]; then
              while read file; do
                [[ -f "$file" ]] && mv "$file" $(sed "s/-.*\.apworld$/.apworld/" <<< "$file")
              done <<< "$NORMALIZE"
          fi

      # uniq is doing SOMETHING that trips up the loop with an empty string
      - name: Archipelago | Custom Worlds - Resolve conflicts
        run: |
          CONFLICT=$(find /tmp/Archipelago/custom_worlds /tmp/Archipelago/lib/worlds -name "*.apworld" -printf "%P\n" | sort | uniq -d)
          if [ -n "$CONFLICT" ]; then
            echo -e "Official Conflicts:\n$CONFLICT"
            while read file; do
              mv -f "/tmp/Archipelago/custom_worlds/${file}" "/tmp/Archipelago/lib/worlds/${file}"
            done <<< "$CONFLICT"
          fi

      #- name: Archipelago | Save Cache
      #  uses: actions/cache/save@v4
      #  with:
      #    key: arch-cache
      #    path: /tmp/Archipelago

      # do we generate single multiworlds or multi single worlds?
      # ~13s to gen a 16 game multi with sync settings. private repos are limited to 2 threads, public 4.
      - name: Archipelago | Multi Sync
        run: |
          cp games/sync/*.yaml /tmp/Archipelago/Players
          /tmp/Archipelago/ArchipelagoGenerate $GEN_SEED $GEN_SKIPPROG --skip_output

      # fuzz a bit. over time this will shake out errors, if any.
      - name: Archipelago | Multi Sync (Fuzz)
        run: |
          parallel -N0 --halt now,fail=1 /tmp/Archipelago/ArchipelagoGenerate $GEN_SEED $GEN_SKIPPROG --skip_output ::: $(seq 1 $GEN_ROUNDS)

      - name: Archipelago | Multi Async/Triggers (Fuzz)
        run: |
          find /tmp/Archipelago/Players/ -maxdepth 1 -type f -name "*.yaml" -exec yq -i '(.async = true)' {} \;
          parallel -N0 --halt now,fail=1 /tmp/Archipelago/ArchipelagoGenerate $GEN_SEED $GEN_SKIPPROG --skip_output ::: $(seq 1 $GEN_ROUNDS)

      - name: Concat | Create
        run: |
          GAMES_CONCAT=$(yq eval-all '{(.game: .[.game])}  | . as $item ireduce ({}; . * $item )' games/sync/*.yaml)
          echo -e "$(cat games/header.yaml ; echo "$GAMES_CONCAT" ; cat games/triggers.yaml)" > "$GIGAYAML"
          yq -P "$GIGAYAML" > /dev/null

      # Should be a quick fuzz with only 1 player
      - name: Concat | Archipelago sanity check
        run: |
          rm -rf /tmp/Archipelago/Players/*
          cp "$GIGAYAML" /tmp/Archipelago/Players/
          parallel -N0 --halt now,fail=1 /tmp/Archipelago/ArchipelagoGenerate $GEN_SEED $GEN_SKIPPROG --skip_output ::: $(seq 1 $GEN_ROUNDS)

      - name: Commit & Push
        id: Commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add "$GIGAYAML"
          git commit -m "Update $GIGAYAML" || exit 0
          git push || exit 0

      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: concat-yaml
          path: ${{ env.GIGAYAML }}

      - name: Summarize
        run: |
          COUNT=$(ls -1 games/sync/*.yaml | wc -l)
          echo "Successfully generated $COUNT games." >> $GITHUB_STEP_SUMMARY
